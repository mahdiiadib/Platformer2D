<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHiAAAAEAIACoDwAAFgAAACgAAAAeAAAAQAAAAAEAIAAAAAAAAA8AAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVGBsZNUpjbERhiqwuPlhsBAAADA8Q
        EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQFAAAAAAIdJzVJL0lsn0FhlLNDYZK3N0ppfAkJ
        Bg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXFBcABAAACCs1Rz1HaJOjVorI60Z1u/8dNWLZEhggPSAw
        TAADAwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwQEAAAAAAEYICkkMkppdlOCx+ddkd//UHGkvxQW
        GB8AAAAAAAAAAAAAAAAAAAAAAAAAAP///wAeIioePlZ8f1V8uNZcis38PnC1/xQ8gP8RLGD5EiA3egsA
        AAQNDhAAAAAAAAAAAAAAAAAAAAAAABEJAAAPBQACExANEhMVGCIQEhQiHSAkOi1ShNBHdbv/WXuz1igx
        PTgAAAAAAAAAAAAAAAAAAAAAKDI+ABkbHhdCYIqZV4rS9U5/x/8iR4L9Ci9t/gwta/8SL2T/DiJGsw0N
        DBUQFBsAAAAAAAAAAAAAAAAAKjlQABEUFxQTHjFfEiVGqQwoUMsMKFHMEilQwQwsXuoVOHP/RGuo6jNF
        XFQAAAAAAAAAAAAAAAAAAAAAWHCPAC02QkFRdqfZV4bH8CxKdcAVKEq2DC1k9gkua/8PL2b/DSRN1BEV
        HS0ZIC4AAAAAAAIAAAAYHiYAEhMUFRAeN4wPJ1TsCy1n/wcubf8JLmz/DC1q/wsvZ/8MLmn/KU+W9kBV
        eIYAAAAAAAAAAAAAAAIAAAADR1VjAB0iJxk2RFZTN0deXCMnKyMWIDBkDi1e9AgvbP8NL2j/DSZR4RQY
        ITwbIzYAAAAAABEQEQAPCgAGExksbw4hSO4LKF3/Cito/wwuav8PLmr/Di5r/wsuav8MLWn/H0aI/klg
        hbAKAwADDxUhMCQ1UXA6U3R7Lz9URAcDAAYSExYACAgIACc7WgAYHypMES1W6Qgua/8LLmr/DSpd7hQk
        P4kUHy9XFRwnQQ4RFR8VGBw1Dxw8zgchT/8DJF3/BSdl/wwrYfwPLV/9DSxl/g0rZPwSLFv1FjFY0i8/
        UmgSGiI9FC1Uv0ZrrfdTebrrP1R2kg0JAxEYGh0AAAAAABYeKAATFxojEChNxQouaf8LLmr/Ci1r/ggt
        ZfgMLF3wESlX4xEmSsIQI0C5CR5H9gUfTf8CIVf/CSVV8xEiPaAPHTOGDx45kQ0bNoIRHC9mERggNQYG
        BAsRIDmcJkuC+lB1q9M2SWdlISg1JAAAAAILDA0AAAAAABAREwAPBQAGECE7dQ8vY/MSM3D/EDJw/wwx
        bf8KLm3/DC5s/w8vZ/8PLWL/CSZa/wMgTv8CH1H/CB9G5hMZIkMUAAAEFAoACBUFAAQWAAAAFgAAAAAA
        AAASJUS1Fzpz/h42WroOEBUsIz9fAAYAAAAAAAAAAAAAAAAAAAASGiYADRATHRcqS6MZN3b3FzmD/xY5
        fv8RNHb/DDBt/wsuaP8NLmj/DS5o/wgnWf8FHU//BhtE1BIXHSsTGiUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAATJkumDy9r/g4sYvgQIkOkEhMVHhcfLAAAAAAAAAAAAC0vMwAODQsOLjhNRkVbgZ45YaHuFUGQ/x1C
        kP8ZPYn/Ejd//wswdf8ILW7/CTFw/wkwbP8HJlv/DiVN4BgiNHQSExggAAAAAAUBAAAAAAAAAAAAAAAA
        AAAYK1CaFDN4+w0vbv8MK130Dx42eBEGAAcODg8AAAAAAR4jKyRBV3+MVn/A4WGU2/pQfr/+ETd2/xQ4
        gP8fQ4//Gz6M/xI3gv8TOYD/GD+E/xQ5fv8PMG3/Di9r/g4rZPMQH0CeExMUGRkdJwAAAAAAAAAAAAAA
        AAAbKUZxFjd48g0xcv8LLmv/DShOzBIXHCxGapwAHio8MEZmlK5ejNL3YZjn/1iN0f8jTYn/Cyxo/wku
        af8RNnb/FzuA/xU4fv8WOX//FDd6/w4xcP8JLmT8HDll1i5RjucfQnnuGCg6W5H//wAHCAgAAAAAAAAA
        AAAaIS48FzVq2A4zcv8OMGf/Cyte8w8cMmoaGBYfRGSVpluQ3fxgmOX/WIvQ/yJMh/8JLWf/DC1s/www
        bf8OMnD/DDFu/wwvbv8MMG//DS5t/w4taf8NKFTZFR8rVEJUc3RSeLLrN05udwAAAAIICQkAAAAAAAAA
        AAAUEQkRFClQmg8waf0OLmj/CCpn/gskUc4sR3KuXIfL8WWY5f9ViM//H0mI/wwraf8MLWv/DzV4/xs/
        jP8YPIT/DjNy/wkvaf8KL2j/DC5j/Q8lUNATGy9bCQQAByEmMB4/U3KKMT5URf///wAGBgYAAAAAAAAA
        AAAlb9EAEh4uRg8qXd0OL3T/DC5t/xpGif9IfsT/YpXd/2CR1v8lTIv/Cixo/wstbP8OM3f/HUOP/x1C
        kv8TN4D/EDFu/wstZv4MKVbpEiM/qRAYJUEOBwAFDQsIAAEAAAEEAQAMAgEABQUCAAAAAAAAAAAAAAAA
        AAARFBUADAcAChgnSIMYN3n4Gj6E/0x8w/9el+T/Y5fj/zplqP8KLWv/Di5o/w0wbP8WOn3/Gz+H/xY5
        f/8NMXP/Di9q/w8qWOwQHDJtFBEQFgsAAAENAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJDRVABohLzscOXbcKFWn/1+R3f9ilef/U4XQ/xQ7d/8NLmj/Dy1m/wosZf8NMG7/DzFv/xEy
        bf8LLm3/DC5q/xImSMcTExUiFRgeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFRkhABAPCxIbL1WVM2Co+FyV5P9kl+T/Omal/wotZ/8OLGj/Cilk/wotaP8LL2r/Citl/wot
        ZP8KLmv/Cyxi+BEfNogRCQAKERARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAsSExlINlOAxFqR3f1fld//Jk+H/wosZv8MLGv/ETN2/xI5fP8SNnf/DzFv/wkt
        af8ML2b/DiZKzBEXHjsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADO//8AHyUvJD9VeIBFYoqkR2KKv1mJ1PZYj9j/GkJ8/wsvav8UNnv/GD2K/xY/jP8UOoP/EDN3/wwu
        bv8OKlvzER0vdQ8LAAkSFBUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAKQlyChl+M0Pdhltz/YJDW+1mI2f5Wh9P/G0B9/w8ycf8YPoT/H0SV/xtElv8VPof/EjR4/w0t
        av4OIkS7DxMYJhMdLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWFhMbTXSovGCX4f9dl+P/W5bm/16S4/9PgtD/HUOF/w4zc/8WP4T/HkKS/xhAkf8ROoH/EzJv/w8o
        UNQSGihHCQAAAQ0LCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAbHyMjT3irxGCY4P9club/WZbm/12Y4/9Wi9T/GD+B/wsxbv8SOnv/GTuC/xI5gf8MMnT/EClW2BMd
        LFgNBgAGEBAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqNkZNVH6z32CU3P9ekuP/W5Pi/1uV2/9ilNn/KlKT/wguZ/8LMW//DzFt/wsta/8LKl/4EiE6ehIG
        AAYTExMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAArN0hMTni14VaO3/9bj+D/WpLg/1eS4P9XjNn/L1yi/wgtaP8HLW7/CS1n/w4vZv8TK1PfFRwnPSEx
        SwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAApNEdXU3q25V6V4v9cisbwX4zJ72CU3v5cj9f/MmGk/x1Dhf88aLT/LFeY/w8za/8RJkmxFBMPFRYa
        HgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAYHCQhRFp9flmAtugvR2W7O1Jvnk55tvktV5P/G0Z+/ydPlf9KfNL/UYXT/ypSjvwPIT6EEAAABQgI
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgJSgAFhYVE0JZf6YvQWDEM013uztmrPwLLW3/DjJo/0Rvsf9JgNT/SH/V/0FmofEQHTBcKHr6AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAADAwMAAAAABCU5W4IpSYP1LFOZ+yBGjv8KLGz/CTJo/zFgov9bj9z/XIvR/zdRe8QMEBgpGSM1AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAACAgIAAAAAAA0WKT0NJ02vCyxb4Q0rXvMMKmn5CSxp/Awva/sjRYD2KENu0RYiM1YDAAAEDQ0OAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAEAkBAA4EAAITFBMbExwlSBYhM3MWIkGQEiNCnRQjP5oTHzZ+DRQfQAkGAQgJCggAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/g/4A/gP+APwB+AD4AfAA+AHgAMgBwAADgAAAA4AAAAOAABwPwAD8B4AAfAIAADwCAAA8AAAAHAAA
        ADyAAAI8gAAH/MAAH/zAAB/8wAA//IAAP/wAAH/8AAB//AAA//wAAf/8AAP//AAD//wAA//8gAf//IAH
        //zAB//8wA///A==
</value>
  </data>
</root>